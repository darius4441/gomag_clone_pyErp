"""
Django settings for gomag project.

Generated by 'django-admin startproject' using Django 4.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/4.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.0/ref/settings/
"""

# Standard Library
import logging
import os

# Django Library
from django.utils.translation import gettext_lazy as _

from pathlib import Path

_logger = logging.getLogger(__name__)


logging.basicConfig(
    level=logging.DEBUG,
    format="%(asctime)s - %(levelname)s -%(filename)s:%(lineno)d - %(message)s",
)
logging.debug("hello world!")

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
# BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-9!0%-9nax079s-67xtg80orqf*wzb+vi21$njt9rj=cc@jpa^b"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ["0.0.0.0", "localhost", "127.0.0.1"]


# Application definition

INSTALLED_APPS = [
    # Django Apps
    "rosetta",
    "modeltranslation",
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.humanize",
    # Third-Party Apps
    "taggit",
    "dal",
    "dal_select2",
    "bootstrap4",
    # "bootstrap5",
    "bootstrap_datepicker_plus",
    "rest_framework",
    "rest_framework.authtoken",
    # Local Apps
    "apps.core",
]


# ========================================================================== #
FIXTURE_DIRS = (os.path.join(BASE_DIR, "fixtures"),)


# ========================================================================== #
# All apps that are plugins are installed at boot time
# Copy to localsettings.py
with open("%s/installed_apps.py" % BASE_DIR, "r") as ins_apps_file:
    for line in ins_apps_file.readlines():
        INSTALLED_APPS += [line.strip()]


# ========================================================================== #
# This configuration makes all these variables available in any template
APP_NAME = "Gomag"
SLOGAN = _("We make your Day Easy")
PREFIX = "Py"
SUFIX = "ERP"
VERSION = "1.0"
INITIAL_A = "P"
INITIAL_B = "E"

SETTINGS_EXPORT = [
    "APP_NAME",
    "SLOGAN",
    "PREFIX",
    "SUFIX",
    "VERSION",
    "INITIAL_A",
    "INITIAL_B",
]

# ========================================================================== #

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.locale.LocaleMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "gomag.urls"


# ========================================================================== #
""" This is the key for the google recaptcha, you have to look for one for the
Project
"""
GOOGLE_RECAPTCHA_SECRET_KEY = "6LevF1gUAAAAAPn3z8EswCgIk1S_jLKYdf4s62B9"

# ========================================================================== #
"""Each context processor of the templates has its reason for being for more detail: https://docs.djangoproject.com/en/2.2/ref/templates/api/
"""

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        # 'APP_DIRS': True,
        "OPTIONS": {
            "loaders": [
                "django.template.loaders.filesystem.Loader",
                "django.template.loaders.app_directories.Loader",
            ],
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django_settings_export.settings_export",
                "django.template.context_processors.i18n",
                "django.template.context_processors.media",
                "django.template.context_processors.static",
                "django.template.context_processors.tz",
                "django.template.context_processors.csrf",
            ],
        },
    },
]

WSGI_APPLICATION = "gomag.wsgi.application"


# Database
# https://docs.djangoproject.com/en/4.0/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}

# ========================================================================== #
""" This setting defines the custom model for auth.user. Also
set the routes for some functions.
"""
AUTH_USER_MODEL = "core.PyUser"
LOGIN_URL = "PyUser:login"
LOGIN_REDIRECT_URL = "core:home"
LOGOUT_REDIRECT_URL = "PyUser:login"


# Password validation
# https://docs.djangoproject.com/en/4.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# ========================================================================== #
""" This block contains all the configuration for localization
"""

LANGUAGE_CODE = "fr-FR"
TIME_ZONE = "Africa/Abidjan"
# Restricts languages
LANGUAGES = [
    ("fr", _("French")),
    ("en", _("English")),
]
# Where Django looks for translation files
LOCALE_PATHS = [
    os.path.join(BASE_DIR, "locale"),
]
USE_I18N = True
USE_L10N = True
USE_TZ = True


# ========================================================================== #
""" This block is for the configuration of the statics and the files of
images
"""
# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

# STATICFILES_DIRS = [os.path.join(BASE_DIR, 'static'),]
STATIC_ROOT = os.path.join(BASE_DIR, "static")
MEDIA_ROOT = "media"
MEDIA_URL = "/media/"
STATIC_URL = "/static/"

# Default primary key field type
# https://docs.djangoproject.com/en/4.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"


# ========================================================================== #
""" In this block you must configure the mail server that will be used
Django to send mail.
"""
# During development only
EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"

# Don't delete this, if it fails importing, go into the try and just display the
# warning, this because in production IF THE LOCALSETTINGS EXISTS, it is good
# practice having a localsettings for local settings, and not entering keys
# no delicate things in this one settings.py
try:
    from .localsettings import *
except ImportError:
    _logger.warning("No hay localsettings, trabajando con settings global.")


REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": (
        "rest_framework.authentication.TokenAuthentication",
    ),
    "DEFAULT_PERMISSION_CLASSES": ("rest_framework.permissions.IsAuthenticated",),
}
